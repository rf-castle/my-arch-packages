name: Build Packages
on:
  push: 
    branches: [ main ]
  workflow_dispatch: {}
jobs:
  update-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Update Packages
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git submodule foreach --recursive git pull origin master
          (git commit -m "Update submodules" && git push origin main ) || echo "No changes to commit"
  pre-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      packages: ${{ steps.get-packages.outputs.packages }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./source
          push: true
          tags: "ghcr.io/${{ github.repository }}/myarchlinux:latest"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
      - name: List Package
        id: get-packages
        run: |
          cd source
          packages=$(find . -maxdepth 1 -type d | sed 's|^\./||' | grep -v '^\.' | grep -v '^scripts$' | jq -R . | jq -cs .)
          echo "packages=$packages" >> $GITHUB_OUTPUT
      - name: Extract Paru From Image
        run: |
          docker run --name extract-paru -d ghcr.io/${{ github.repository }}/myarchlinux:latest
          docker cp extract-paru:/opt/dist/ .
          docker rm -f extract-paru
          pwd
          ls
      - name: Upload Paru
        uses: actions/upload-artifact@v4
        with:
          name: package-paru
          path: "*.pkg.tar.zst"
  build:
    runs-on: ubuntu-latest
    needs:
      - pre-build
      - update-packages
    container:
      image: ghcr.io/${{ github.repository }}/myarchlinux:latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.pre-build.outputs.packages) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set Package Path
        run: |
          echo "PACKAGE_PATH=$(realpath source/${{ matrix.package }})" >> $GITHUB_ENV
      - name: Update Permissions
        run: |
          chown -R builder:builder .
      - name: Update Submodules
        run: |
          git config --global --add safe.directory $PWD
          git submodule update --init $PACKAGE_PATH
      - name: Run Scripts when exists
        run: |
          pushd source
          if [ -f ./scripts/${{ matrix.package }}.sh ]; then
            bash ./scripts/${{ matrix.package }}.sh
          fi
          popd
      - name: Build Package
        run: |
          pushd $PACKAGE_PATH
          sudo -u builder -- env PKGDEST=$PWD/dist paru -B --noconfirm .
          ls -l dist
          popd
      - name: upload package
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.package }}
          path: ${{ env.PACKAGE_PATH }}/dist/*.pkg.tar.zst
      
  deploy:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ghcr.io/${{ github.repository }}/myarchlinux:latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0
      - name: Download Package
        uses: actions/download-artifact@v4
        with:
          pattern: package-*
          path: "."
          merge-multiple: true
      - name: Create Repository
        run: |
          repo-add -n -R parrot.db.tar.gz *.pkg.tar.zst
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          # Upload entire repository
          path: '.'
      - name: Upload With Github Pages
        uses: actions/deploy-pages@v4.0.5
